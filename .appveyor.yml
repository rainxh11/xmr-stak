# image
image: Visual Studio 2017 

# For CUDA Enabled use image: Previous Visual Studio 2017 
#image: Previous Visual Studio 2017 

# build platform
platform: x64

# clone directory
clone_folder: c:\xmr-stak

# Uncomment for CUDA Enabled Build
install:
  - appveyor DownloadFile  "https://github.com/rainxh11/xmr-stak/raw/master/cuda_10.0.130_win10_network.exe" -FileName cuda_10.0.130_win10_network.exe
  - cuda_10.0.130_win10_network.exe -s nvcc_10.0 cudart_10.0
  - set PATH=%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v10.0\bin;%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v10.0\libnvvp;%PATH%
  - nvcc -V

build_script:
  #- call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" x64 -vcvars_ver=14.11  
  #- call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsMSBuildCmd.bat"
  - cd c:\xmr-stak
  - mkdir build
  - cd build
  - set CMAKE_PREFIX_PATH=..\hwloc
  - cmake -G "Visual Studio 15 2017 Win64" -T host=x64 .. -DHWLOC="..\hwloc\lib\libhwloc.lib" -DHWLOC_INCLUDE_DIR="..\hwloc\include" -DOpenCL_INCLUDE_DIR="..\openclamd\include" -DOpenCL_LIBRARY="..\openclamd\lib\OpenCL.lib"  -DCUDA_ENABLE=OFF
  - cmake --build . --config Release --target install
  
after_build:
- ps: | # package artifacts
    7z a -m0=LZMA2 -mx9 c:\xmr-stak\xmr-stak.7z c:\xmr-stak\build\bin\Release\*.exe c:\xmr-stak\build\bin\Release\*.dll

artifacts:
- path: xmr-stak.7z
  name: xmr-stak

  
test_script:
  - cd c:\xmr-stak\build\bin\Release
  - dir
  - set XMRSTAK_NOWAIT=1
  - xmr-stak.exe --help --noUAC
